#!csharp

using System.Text.RegularExpressions;

var UppercaseRegex = new Regex("[A-Z]");
var LowercaseRegex = new Regex("[a-z]");
int Priority(char c) {
    if (LowercaseRegex.IsMatch($"{c}")) {
        return c - 'a' + 1;
    }
    if (UppercaseRegex.IsMatch($"{c}")) {
        return c - 'A' + 27;
    }
    throw new InvalidOperationException($"Unknown rucksack item {c}");
}

#!csharp

var lines = System.IO.File.ReadAllLines("input.txt");
lines

#!csharp

lines.Select(line => (line.Take(line.Length / 2), line.Skip(line.Length / 2)))
    .Select(rucksacks => rucksacks.Item1.Intersect(rucksacks.Item2).Single())
    .Select(Priority)
    .Sum()

#!csharp

lines.Chunk(3)
    .Select(elves => elves
        .Select(bag => bag.AsEnumerable())
        .Aggregate((commonItems, nextBag) => commonItems.Intersect(nextBag))
        .Single()
    )
    .Select(Priority)
    .Sum()
